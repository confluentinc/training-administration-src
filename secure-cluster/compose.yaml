services:
    controller-1:
        image: confluentinc/cp-server:7.8.1
        hostname: controller-1
        container_name: controller-1
        volumes:
            - data-controller-1:/var/lib/kafka/data
        healthcheck:
            test: kafka-metadata-quorum --bootstrap-controller controller-1:19095 describe --status >/dev/null 2>&1
            interval: 15s
            retries: 3
        environment:
            KAFKA_NODE_ID: 9991
            CLUSTER_ID: Nk018hRAQFytWskYqtQduw
            KAFKA_PROCESS_ROLES: controller
            KAFKA_LISTENERS: CONTROLLER://controller-1:19095
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CONTROLLER_QUORUM_VOTERS: 9991@controller-1:19095,9992@controller-2:29095,9993@controller-3:39095
            KAFKA_JMX_PORT: 9999
            KAFKA_JMX_HOSTNAME: controller-1
            KAFKA_BROKER_RACK: rack-0
            KAFKA_DEFAULT_REPLICATION_FACTOR: 3
            KAFKA_OFFSET_REPLICATION_FACTOR: 3
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
            KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 3
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 3
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
        cap_add:
            - NET_ADMIN
        ports:
            - "19095:19095"

    controller-2:
        image: confluentinc/cp-server:7.8.1
        hostname: controller-2
        container_name: controller-2
        volumes:
            - data-controller-2:/var/lib/kafka/data
        healthcheck:
            test: kafka-metadata-quorum --bootstrap-controller controller-2:29095 describe --status >/dev/null 2>&1
            interval: 15s
            retries: 3
        environment:
            KAFKA_NODE_ID: 9992
            CLUSTER_ID: Nk018hRAQFytWskYqtQduw
            KAFKA_PROCESS_ROLES: controller
            KAFKA_LISTENERS: CONTROLLER://controller-2:29095
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CONTROLLER_QUORUM_VOTERS: 9991@controller-1:19095,9992@controller-2:29095,9993@controller-3:39095
            KAFKA_JMX_PORT: 9999
            KAFKA_JMX_HOSTNAME: controller-2
            KAFKA_BROKER_RACK: rack-0
            KAFKA_DEFAULT_REPLICATION_FACTOR: 3
            KAFKA_OFFSET_REPLICATION_FACTOR: 3
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
            KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 3
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 3
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
        cap_add:
            - NET_ADMIN
        ports:
            - "29095:29095"

    controller-3:
        image: confluentinc/cp-server:7.8.1
        hostname: controller-3
        container_name: controller-3
        volumes:
            - data-controller-3:/var/lib/kafka/data
        healthcheck:
            test: kafka-metadata-quorum --bootstrap-controller controller-3:39095 describe --status >/dev/null 2>&1
            interval: 15s
            retries: 3
        environment:
            KAFKA_NODE_ID: 9993
            CLUSTER_ID: Nk018hRAQFytWskYqtQduw
            KAFKA_PROCESS_ROLES: controller
            KAFKA_LISTENERS: CONTROLLER://controller-3:39095
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CONTROLLER_QUORUM_VOTERS: 9991@controller-1:19095,9992@controller-2:29095,9993@controller-3:39095
            KAFKA_JMX_PORT: 9999
            KAFKA_JMX_HOSTNAME: controller-3
            KAFKA_BROKER_RACK: rack-0
            KAFKA_DEFAULT_REPLICATION_FACTOR: 3
            KAFKA_OFFSET_REPLICATION_FACTOR: 3
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
            KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 3
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 3
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
        cap_add:
            - NET_ADMIN
        ports:
            - "39095:39095"

    kafka-1:
        image: confluentinc/cp-server:7.8.1
        hostname: kafka-1
        container_name: kafka-1
        volumes:
            - data-kafka-1:/var/lib/kafka/data
            - $PWD/kafka-1-creds:/etc/kafka/secrets
        command: >
            bash -c 'echo "starting keystore check";
              until [ -f /etc/kafka/secrets/kafka-1_truststore_creds ]; do
                  echo "checking for /etc/kafka/secrets/kafka-1_truststore_creds";
                  sleep 5; 
              done
              echo "keystore found";
              /etc/confluent/docker/run'
        healthcheck:
            test: nc -z kafka-1 19093
            interval: 15s
            retries: 3
        depends_on:
            controller-1:
                condition: service_healthy
            controller-2:
                condition: service_healthy
            controller-3:
                condition: service_healthy
        environment:
            KAFKA_LISTENERS: SSL://kafka-1:19093, DOCKER://kafka-1:9092, EXTERNAL://kafka-1:19092
            KAFKA_ADVERTISED_LISTENERS: SSL://kafka-1:19093, DOCKER://kafka-1:9092, EXTERNAL://kafka-1:19092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,EXTERNAL:PLAINTEXT,SSL:SSL
            KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
            KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-1.keystore.jks
            KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
            KAFKA_SSL_KEY_CREDENTIALS: kafka-1_sslkey_creds
            KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-1.truststore.jks
            KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1_truststore_creds
            KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "https"
            # KAFKA_SSL_CLIENT_AUTH: "required"
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_JMX_PORT: 10001
            KAFKA_JMX_HOSTNAME: localhost
            KAFKA_BROKER_RACK: rack-0
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_NODE_ID: 1
            CLUSTER_ID: Nk018hRAQFytWskYqtQduw
            KAFKA_CONTROLLER_QUORUM_VOTERS: 9991@controller-1:19095,9992@controller-2:29095,9993@controller-3:39095
            KAFKA_PROCESS_ROLES: broker
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
        cap_add:
            - NET_ADMIN
        ports:
            - "19092:19092"
            - "19093:19093"
            - "10001:10001"

    kafka-2:
        image: confluentinc/cp-server:7.8.1
        hostname: kafka-2
        container_name: kafka-2
        volumes:
            - data-kafka-2:/var/lib/kafka/data
            - $PWD/kafka-2-creds:/etc/kafka/secrets
        command: >
            bash -c 'echo "starting keystore check";
            until [ -f /etc/kafka/secrets/kafka-2_truststore_creds ]; do
              echo "checking for /etc/kafka/secrets/kafka-2_truststore_creds";
                  sleep 5; 
              done
              echo "keystore found";
              /etc/confluent/docker/run'
        healthcheck:
            test: nc -z kafka-2 29093
            interval: 15s
            retries: 3
        depends_on:
            controller-1:
                condition: service_healthy
            controller-2:
                condition: service_healthy
            controller-3:
                condition: service_healthy
        environment:
            KAFKA_LISTENERS: SSL://kafka-2:29093, DOCKER://kafka-2:9092, EXTERNAL://kafka-2:29092
            KAFKA_ADVERTISED_LISTENERS: SSL://kafka-2:29093, DOCKER://kafka-2:9092, EXTERNAL://kafka-2:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,EXTERNAL:PLAINTEXT,SSL:SSL
            KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
            KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-2.keystore.jks
            KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
            KAFKA_SSL_KEY_CREDENTIALS: kafka-2_sslkey_creds
            KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-2.truststore.jks
            KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2_truststore_creds
            KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "https"
            # KAFKA_SSL_CLIENT_AUTH: "required"
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_JMX_PORT: 10002
            KAFKA_JMX_HOSTNAME: localhost
            KAFKA_BROKER_RACK: rack-0
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_NODE_ID: 2
            CLUSTER_ID: Nk018hRAQFytWskYqtQduw
            KAFKA_CONTROLLER_QUORUM_VOTERS: 9991@controller-1:19095,9992@controller-2:29095,9993@controller-3:39095
            KAFKA_PROCESS_ROLES: broker
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
        cap_add:
            - NET_ADMIN
        ports:
            - "29092:29092"
            - "29093:29093"
            - "10002:10002"

    kafka-3:
        image: confluentinc/cp-server:7.8.1
        hostname: kafka-3
        container_name: kafka-3
        volumes:
            - data-kafka-3:/var/lib/kafka/data
            - $PWD/kafka-3-creds:/etc/kafka/secrets
        command: >
            bash -c 'echo "starting keystore check";
            until [ -f /etc/kafka/secrets/kafka-3_truststore_creds ]; do
              echo "checking for /etc/kafka/secrets/kafka-3_truststore_creds";
                  sleep 5; 
              done
              echo "keystore found";
              /etc/confluent/docker/run'
        healthcheck:
            test: nc -z kafka-3 39093
            interval: 15s
            retries: 3
        depends_on:
            controller-1:
                condition: service_healthy
            controller-2:
                condition: service_healthy
            controller-3:
                condition: service_healthy
        environment:
            KAFKA_LISTENERS: SSL://kafka-3:39093, DOCKER://kafka-3:9092, EXTERNAL://kafka-3:39092
            KAFKA_ADVERTISED_LISTENERS: SSL://kafka-3:39093, DOCKER://kafka-3:9092, EXTERNAL://kafka-3:39092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,EXTERNAL:PLAINTEXT,SSL:SSL
            KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
            KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-3.keystore.jks
            KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-3_keystore_creds
            KAFKA_SSL_KEY_CREDENTIALS: kafka-3_sslkey_creds
            KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-3.truststore.jks
            KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-3_truststore_creds
            KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: "https"
            # KAFKA_SSL_CLIENT_AUTH: "required"
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_JMX_PORT: 10003
            KAFKA_JMX_HOSTNAME: localhost
            KAFKA_BROKER_RACK: rack-0
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_NODE_ID: 3
            CLUSTER_ID: Nk018hRAQFytWskYqtQduw
            KAFKA_CONTROLLER_QUORUM_VOTERS: 9991@controller-1:19095,9992@controller-2:29095,9993@controller-3:39095
            KAFKA_PROCESS_ROLES: broker
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
        cap_add:
            - NET_ADMIN
        ports:
            - "39092:39092"
            - "39093:39093"
            - "10003:10003"

    # tools:
    #     image: cnfltraining/training-tools:7.5
    #     restart: always
    #     hostname: tools
    #     container_name: tools
    #     volumes:
    #         - $PWD:/secure-cluster
    #         - $PWD/client-creds:/etc/kafka/secrets
    #     environment:
    #         CLASSPATH: "/usr/share/java/monitoring-interceptors/monitoring-interceptors-7.5.3.jar"
    #     working_dir: /secure-cluster
    #     command: /bin/bash
    #     tty: true


volumes:
    data-controller-1:
    data-controller-2:
    data-controller-3:
    data-kafka-1:
    data-kafka-2:
    data-kafka-3:
